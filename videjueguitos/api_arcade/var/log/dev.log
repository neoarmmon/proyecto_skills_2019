[2024-02-08T09:45:00.632155+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" [] []
[2024-02-08T09:45:00.977369+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" [] []
[2024-02-08T09:45:01.069247+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2024-02-08T09:45:01.070661+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" [] []
[2024-02-08T09:45:01.294515+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2024-02-08T09:45:01.308351+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" [] []
[2024-02-08T09:45:01.309148+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2024-02-08T09:45:01.320475+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2024-02-08T09:45:02.173343+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" [] []
[2024-02-08T09:45:02.377076+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" [] []
[2024-02-08T09:45:02.454715+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2024-02-08T09:45:02.456231+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" [] []
[2024-02-08T09:45:02.653200+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2024-02-08T09:45:02.678209+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" [] []
[2024-02-08T09:45:02.681808+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2024-02-08T09:45:02.697033+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2024-02-08T09:45:07.131977+01:00] php.DEBUG: Warning: filemtime(): stat failed for C:\Visual\proyecto\proyecto_skills_2019\videjueguitos\api_arcade\api_arcade\config\routes\framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\symfony\\config\\Resource\\FileResource.php","line":58,"trace":[{"file":"C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\symfony\\config\\Resource\\SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2024-02-08T09:48:57.235804+01:00] request.INFO: Matched route "app_index". {"route":"app_index","route_parameters":{"_route":"app_index","_controller":"App\\Controller\\index::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2024-02-08T09:48:57.497462+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2024-02-08T09:48:58.779180+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/favicon.ico" (from "http://127.0.0.1:8000/")" at RouterListener.php line 127 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/favicon.ico\" (from \"http://127.0.0.1:8000/\") at C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:127)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2024-02-08T09:49:00.534783+01:00] request.INFO: Matched route "app_roles_usuario_index". {"route":"app_roles_usuario_index","route_parameters":{"_route":"app_roles_usuario_index","_controller":"App\\Controller\\RolesUsuarioController::index"},"request_uri":"http://127.0.0.1:8000/roles/usuario/","method":"GET"} []
[2024-02-08T09:49:00.545531+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2024-02-08T09:49:02.531595+01:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"}} []
[2024-02-08T09:49:02.600669+01:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.nombre AS nombre_2, t0.descripcion AS descripcion_3 FROM roles_usuario t0 {"sql":"SELECT t0.id AS id_1, t0.nombre AS nombre_2, t0.descripcion AS descripcion_3 FROM roles_usuario t0"} []
[2024-02-08T09:49:03.891122+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-08T09:49:04.616253+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"999540"},"request_uri":"http://127.0.0.1:8000/_wdt/999540","method":"GET"} []
[2024-02-08T09:49:06.609801+01:00] request.INFO: Matched route "app_roles_usuario_edit". {"route":"app_roles_usuario_edit","route_parameters":{"_route":"app_roles_usuario_edit","_controller":"App\\Controller\\RolesUsuarioController::edit","id":"3"},"request_uri":"http://127.0.0.1:8000/roles/usuario/3/edit","method":"GET"} []
[2024-02-08T09:49:06.660496+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2024-02-08T09:49:06.794395+01:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"}} []
[2024-02-08T09:49:06.874384+01:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.nombre AS nombre_2, t0.descripcion AS descripcion_3 FROM roles_usuario t0 WHERE t0.id = ? (parameters: array{"1":"3"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.nombre AS nombre_2, t0.descripcion AS descripcion_3 FROM roles_usuario t0 WHERE t0.id = ?","params":{"1":"3"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:49:08.767122+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-08T09:49:09.341190+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"00ebfe"},"request_uri":"http://127.0.0.1:8000/_wdt/00ebfe","method":"GET"} []
[2024-02-08T09:49:14.192749+01:00] request.INFO: Matched route "app_roles_usuario_edit". {"route":"app_roles_usuario_edit","route_parameters":{"_route":"app_roles_usuario_edit","_controller":"App\\Controller\\RolesUsuarioController::edit","id":"3"},"request_uri":"http://127.0.0.1:8000/roles/usuario/3/edit","method":"POST"} []
[2024-02-08T09:49:14.225143+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2024-02-08T09:49:14.326006+01:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"}} []
[2024-02-08T09:49:14.329257+01:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.nombre AS nombre_2, t0.descripcion AS descripcion_3 FROM roles_usuario t0 WHERE t0.id = ? (parameters: array{"1":"3"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.nombre AS nombre_2, t0.descripcion AS descripcion_3 FROM roles_usuario t0 WHERE t0.id = ?","params":{"1":"3"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:49:15.204820+01:00] doctrine.DEBUG: Beginning transaction [] []
[2024-02-08T09:49:15.206286+01:00] doctrine.DEBUG: Executing statement: UPDATE roles_usuario SET descripcion = ? WHERE id = ? (parameters: array{"1":"normal","2":3}, types: array{"1":0,"2":0}) {"sql":"UPDATE roles_usuario SET descripcion = ? WHERE id = ?","params":{"1":"normal","2":3},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:49:15.234074+01:00] doctrine.DEBUG: Committing transaction [] []
[2024-02-08T09:49:15.273725+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-08T09:49:15.571766+01:00] request.INFO: Matched route "app_roles_usuario_index". {"route":"app_roles_usuario_index","route_parameters":{"_route":"app_roles_usuario_index","_controller":"App\\Controller\\RolesUsuarioController::index"},"request_uri":"http://127.0.0.1:8000/roles/usuario/","method":"GET"} []
[2024-02-08T09:49:15.605169+01:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2024-02-08T09:49:15.824541+01:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"}} []
[2024-02-08T09:49:15.833445+01:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.nombre AS nombre_2, t0.descripcion AS descripcion_3 FROM roles_usuario t0 {"sql":"SELECT t0.id AS id_1, t0.nombre AS nombre_2, t0.descripcion AS descripcion_3 FROM roles_usuario t0"} []
[2024-02-08T09:49:15.922740+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-08T09:49:16.193028+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8b5abb"},"request_uri":"http://127.0.0.1:8000/_wdt/8b5abb","method":"GET"} []
[2024-02-08T09:57:59.127932+01:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"}} []
[2024-02-08T09:57:59.135619+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.137582+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.151994+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.152259+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.160703+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.160999+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.200684+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.201007+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.204908+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.205164+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.211511+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.211754+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.215365+01:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-02-08T09:57:59.217822+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T09:57:59.221251+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.221473+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.221999+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.222179+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.222713+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.222893+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.252721+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.253013+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.253555+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.253734+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.254327+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.254507+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.255213+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T09:57:59.257239+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:57:59.257441+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade"}, types: array{"1":0,"2":0}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.289043+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.290527+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade"}, types: array{"1":0,"2":0}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.291470+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.319797+01:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-02-08T09:57:59.320133+01:00] doctrine.DEBUG: Executing statement: SELECT DEFAULT_COLLATE_NAME FROM information_schema.CHARACTER_SETS WHERE CHARACTER_SET_NAME = ?; (parameters: array{"1":"utf8mb4"}, types: array{"1":0}) {"sql":"SELECT DEFAULT_COLLATE_NAME\nFROM information_schema.CHARACTER_SETS\nWHERE CHARACTER_SET_NAME = ?;","params":{"1":"utf8mb4"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:57:59.322533+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Column "imagen" has invalid type" {"exception":"[object] (Doctrine\\DBAL\\Exception\\InvalidColumnDeclaration(code: 0): Column \"imagen\" has invalid type at C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\doctrine\\dbal\\src\\Exception\\InvalidColumnDeclaration.php:17)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\InvalidColumnType\\ColumnLengthRequired(code: 0): Doctrine\\DBAL\\Platforms\\MariaDBPlatform requires the length of a VARBINARY column to be specified at C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\doctrine\\dbal\\src\\Exception\\InvalidColumnType\\ColumnLengthRequired.php:26)","command":"make:migration","message":"Column \"imagen\" has invalid type"} []
[2024-02-08T09:57:59.322905+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2024-02-08T09:57:59.329418+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-08T09:58:21.342650+01:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"}} []
[2024-02-08T09:58:21.346473+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.347283+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.347714+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.347853+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.353362+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.353520+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.377506+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.377752+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.378142+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.378287+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.378747+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.378879+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.380753+01:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-02-08T09:58:21.381388+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T09:58:21.383297+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.383452+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.383808+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.383938+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.384259+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.384391+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.408470+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.408763+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.409182+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.409393+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.409946+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.410153+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.410742+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T09:58:21.412464+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:21.412634+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade"}, types: array{"1":0,"2":0}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.434757+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.435623+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade"}, types: array{"1":0,"2":0}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.436345+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.456149+01:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-02-08T09:58:21.456556+01:00] doctrine.DEBUG: Executing statement: SELECT DEFAULT_COLLATE_NAME FROM information_schema.CHARACTER_SETS WHERE CHARACTER_SET_NAME = ?; (parameters: array{"1":"utf8mb4"}, types: array{"1":0}) {"sql":"SELECT DEFAULT_COLLATE_NAME\nFROM information_schema.CHARACTER_SETS\nWHERE CHARACTER_SET_NAME = ?;","params":{"1":"utf8mb4"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:21.458356+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Column "imagen" has invalid type" {"exception":"[object] (Doctrine\\DBAL\\Exception\\InvalidColumnDeclaration(code: 0): Column \"imagen\" has invalid type at C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\doctrine\\dbal\\src\\Exception\\InvalidColumnDeclaration.php:17)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\InvalidColumnType\\ColumnLengthRequired(code: 0): Doctrine\\DBAL\\Platforms\\MariaDBPlatform requires the length of a VARBINARY column to be specified at C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\doctrine\\dbal\\src\\Exception\\InvalidColumnType\\ColumnLengthRequired.php:26)","command":"make:migration","message":"Column \"imagen\" has invalid type"} []
[2024-02-08T09:58:21.458641+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2024-02-08T09:58:21.463251+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-08T09:58:54.598896+01:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"}} []
[2024-02-08T09:58:54.602717+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.603538+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.604013+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.604159+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.609631+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.609791+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.632628+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.632928+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.633468+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.633680+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.634313+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.634453+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.636431+01:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-02-08T09:58:54.637061+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T09:58:54.639034+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.639246+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.639699+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.639900+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.640270+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.640480+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.659092+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.659346+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.659779+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.659911+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.660605+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.660737+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.661473+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T09:58:54.663159+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T09:58:54.663412+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade"}, types: array{"1":0,"2":0}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.684911+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.685814+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade"}, types: array{"1":0,"2":0}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.686615+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.706519+01:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-02-08T09:58:54.706867+01:00] doctrine.DEBUG: Executing statement: SELECT DEFAULT_COLLATE_NAME FROM information_schema.CHARACTER_SETS WHERE CHARACTER_SET_NAME = ?; (parameters: array{"1":"utf8mb4"}, types: array{"1":0}) {"sql":"SELECT DEFAULT_COLLATE_NAME\nFROM information_schema.CHARACTER_SETS\nWHERE CHARACTER_SET_NAME = ?;","params":{"1":"utf8mb4"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T09:58:54.708997+01:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Column "imagen" has invalid type" {"exception":"[object] (Doctrine\\DBAL\\Exception\\InvalidColumnDeclaration(code: 0): Column \"imagen\" has invalid type at C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\doctrine\\dbal\\src\\Exception\\InvalidColumnDeclaration.php:17)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\InvalidColumnType\\ColumnLengthRequired(code: 0): Doctrine\\DBAL\\Platforms\\MariaDBPlatform requires the length of a VARBINARY column to be specified at C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\doctrine\\dbal\\src\\Exception\\InvalidColumnType\\ColumnLengthRequired.php:26)","command":"make:migration","message":"Column \"imagen\" has invalid type"} []
[2024-02-08T09:58:54.709304+01:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2024-02-08T09:58:54.713838+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-08T10:04:57.253152+01:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"}} []
[2024-02-08T10:04:57.257109+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.257963+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.258475+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.258614+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.264173+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.264336+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.287659+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.287909+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.288294+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.288437+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.288902+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.289041+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.290900+01:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-02-08T10:04:57.291560+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T10:04:57.293427+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.293588+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.293940+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.294073+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.294590+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.294801+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.314396+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.314723+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.315269+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.315482+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.316109+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.316342+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.317071+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T10:04:57.318603+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:04:57.318825+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade"}, types: array{"1":0,"2":0}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.343387+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.344116+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade"}, types: array{"1":0,"2":0}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.344771+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.368593+01:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-02-08T10:04:57.368977+01:00] doctrine.DEBUG: Executing statement: SELECT DEFAULT_COLLATE_NAME FROM information_schema.CHARACTER_SETS WHERE CHARACTER_SET_NAME = ?; (parameters: array{"1":"utf8mb4"}, types: array{"1":0}) {"sql":"SELECT DEFAULT_COLLATE_NAME\nFROM information_schema.CHARACTER_SETS\nWHERE CHARACTER_SET_NAME = ?;","params":{"1":"utf8mb4"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:04:57.374785+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-08T10:05:14.949823+01:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"localhost","port":3306,"user":"root","password":null,"driverOptions":[],"defaultTableOptions":[],"dbname":"juegosarcade","serverVersion":"10.4.28-MariaDB","charset":"utf8mb4"}} []
[2024-02-08T10:05:14.953586+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:05:17.655601+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:05:17.656381+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"juegosarcade"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:05:17.662588+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:05:17.662858+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * FROM information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'juegosarcade'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"juegosarcade","2":"juegosarcade","3":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:05:17.693711+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:05:17.693943+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:05:17.694497+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:05:17.694706+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"}, types: array{"1":0,"2":0,"3":0}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION,\n            c.UPDATE_RULE,\n            c.DELETE_RULE\nFROM information_schema.key_column_usage k\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"juegosarcade","2":"doctrine_migration_versions","3":"juegosarcade"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:05:17.695368+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-08T10:05:17.695584+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"juegosarcade","2":"doctrine_migration_versions"}, types: array{"1":0,"2":0}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"juegosarcade","2":"doctrine_migration_versions"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:05:17.697647+01:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-02-08T10:05:17.701920+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T10:05:17.703192+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T10:05:17.703948+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-08T10:05:17.707762+01:00] doctrine.DEBUG: Beginning transaction [] []
[2024-02-08T10:05:17.709443+01:00] doctrine.DEBUG: Executing query: CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, username VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_8D93D649F85E0677 (username), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 {"sql":"CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, username VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_8D93D649F85E0677 (username), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4"} []
[2024-02-08T10:05:17.733337+01:00] doctrine.DEBUG: Executing query: ALTER TABLE juego CHANGE imagen imagen LONGBLOB DEFAULT NULL {"sql":"ALTER TABLE juego CHANGE imagen imagen LONGBLOB DEFAULT NULL"} []
[2024-02-08T10:05:17.756868+01:00] doctrine.DEBUG: Executing query: ALTER TABLE messenger_messages CHANGE created_at created_at DATETIME NOT NULL, CHANGE available_at available_at DATETIME NOT NULL, CHANGE delivered_at delivered_at DATETIME DEFAULT NULL {"sql":"ALTER TABLE messenger_messages CHANGE created_at created_at DATETIME NOT NULL, CHANGE available_at available_at DATETIME NOT NULL, CHANGE delivered_at delivered_at DATETIME DEFAULT NULL"} []
[2024-02-08T10:05:17.759779+01:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20240208090457","2":"2024-02-08 10:05:17","3":51}, types: array{"1":0,"2":0,"3":0}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20240208090457","2":"2024-02-08 10:05:17","3":51},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-02-08T10:05:17.762879+01:00] deprecation.INFO: User Deprecated: Context: trying to commit a transaction Problem: the transaction is already committed, relying on silencing is deprecated. Solution: override `AbstractMigration::isTransactional()` so that it returns false. Automate that by setting `transactional` to false in the configuration. More details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:191, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Context: trying to commit a transaction\nProblem: the transaction is already committed, relying on silencing is deprecated.\nSolution: override `AbstractMigration::isTransactional()` so that it returns false.\nAutomate that by setting `transactional` to false in the configuration.\nMore details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:191, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) at C:\\Visual\\proyecto\\proyecto_skills_2019\\videjueguitos\\api_arcade\\vendor\\doctrine\\deprecations\\lib\\Doctrine\\Deprecations\\Deprecation.php:210)"} []
[2024-02-08T10:05:17.772385+01:00] doctrine.INFO: Disconnecting [] []
